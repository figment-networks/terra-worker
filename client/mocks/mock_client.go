// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/figment-networks/terra-worker/client (interfaces: RPC)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	structs "github.com/figment-networks/indexing-engine/structs"
	api "github.com/figment-networks/terra-worker/api"
	types "github.com/figment-networks/terra-worker/api/types"
	gomock "github.com/golang/mock/gomock"
	amino "github.com/tendermint/go-amino"
	reflect "reflect"
	sync "sync"
)

// MockRPC is a mock of RPC interface
type MockRPC struct {
	ctrl     *gomock.Controller
	recorder *MockRPCMockRecorder
}

// MockRPCMockRecorder is the mock recorder for MockRPC
type MockRPCMockRecorder struct {
	mock *MockRPC
}

// NewMockRPC creates a new mock instance
func NewMockRPC(ctrl *gomock.Controller) *MockRPC {
	mock := &MockRPC{ctrl: ctrl}
	mock.recorder = &MockRPCMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRPC) EXPECT() *MockRPCMockRecorder {
	return m.recorder
}

// CDC mocks base method
func (m *MockRPC) CDC() *amino.Codec {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CDC")
	ret0, _ := ret[0].(*amino.Codec)
	return ret0
}

// CDC indicates an expected call of CDC
func (mr *MockRPCMockRecorder) CDC() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CDC", reflect.TypeOf((*MockRPC)(nil).CDC))
}

// GetBlocksMeta mocks base method
func (m *MockRPC) GetBlocksMeta(arg0 context.Context, arg1 structs.HeightRange, arg2 uint64, arg3 *api.BlocksMap, arg4 chan<- error) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetBlocksMeta", arg0, arg1, arg2, arg3, arg4)
}

// GetBlocksMeta indicates an expected call of GetBlocksMeta
func (mr *MockRPCMockRecorder) GetBlocksMeta(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlocksMeta", reflect.TypeOf((*MockRPC)(nil).GetBlocksMeta), arg0, arg1, arg2, arg3, arg4)
}

// SingularHeightWorker mocks base method
func (m *MockRPC) SingularHeightWorker(arg0 context.Context, arg1 *sync.WaitGroup, arg2 chan types.TxResponse, arg3 chan api.ToGet) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SingularHeightWorker", arg0, arg1, arg2, arg3)
}

// SingularHeightWorker indicates an expected call of SingularHeightWorker
func (mr *MockRPCMockRecorder) SingularHeightWorker(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SingularHeightWorker", reflect.TypeOf((*MockRPC)(nil).SingularHeightWorker), arg0, arg1, arg2, arg3)
}
